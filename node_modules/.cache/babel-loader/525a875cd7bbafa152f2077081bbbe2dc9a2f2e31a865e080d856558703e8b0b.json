{"ast":null,"code":"var _jsxFileName = \"/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\nconst Analysis = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n  const validateInput = () => true; // skip group validation now\n\n  const processFiles = async () => {\n    if (!validateInput()) return;\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', ''); // dummy\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n      const data = await response.json();\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = {\n          total: 0,\n          count: 0,\n          samples: []\n        };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({\n          file: d.File,\n          replicate: d.Replicate,\n          value: d.Mean_edit\n        });\n        return acc;\n      }, {});\n      const maxEdit = Math.max(...data.map(d => d.Mean_edit || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n      const labels = Object.keys(groupedData);\n      const groupMeans = labels.map(group => groupedData[group].total / groupedData[group].count);\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, groupIdx) => groupedData[group].samples.map(s => ({\n          x: group,\n          y: s.value\n        }))),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        showLine: false\n      };\n      setResults({\n        labels,\n        datasets: [{\n          label: 'Mean Editing (%)',\n          data: groupMeans,\n          backgroundColor: '#C00000',\n          borderColor: '#C00000',\n          borderWidth: 1\n        }, replicatePoints],\n        rawData: Object.entries(groupedData).map(([group, info]) => ({\n          group,\n          ...info\n        })),\n        chartMax\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n  const chartOptions = maxY => ({\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Editing by Group',\n        color: '#C00000'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: {\n          display: true,\n          text: 'Editing (%)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Group'\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-3 has-text-black mb-4\",\n      children: \"Sanger Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"is-flex is-align-items-center mb-5\",\n      style: {\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file has-name is-rounded\",\n        style: {\n          backgroundColor: '#C00000'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-label\",\n          style: {\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-input\",\n            type: \"file\",\n            name: \"ab1files\",\n            accept: \".ab1\",\n            multiple: true,\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-cta\",\n            style: {\n              backgroundColor: '#C00000',\n              borderRadius: '20px',\n              color: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-label\",\n              children: \"Select Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name has-text-white\",\n            children: files.length > 0 ? `${files.length} file(s)` : 'No files selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processFiles,\n        className: \"button\",\n        style: {\n          backgroundColor: '#C00000',\n          color: 'white',\n          borderRadius: '20px',\n          padding: '10px 20px',\n          border: 'none'\n        },\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), metadata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '50%',\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"has-text-black\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Replicate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metadata.map((meta, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"has-text-black\",\n              children: meta.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                value: meta.group,\n                onChange: e => handleMetadataChange(idx, 'group', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                value: meta.replicate,\n                onChange: e => handleMetadataChange(idx, 'replicate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: processingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"has-text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: results,\n          options: chartOptions(results.chartMax)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table is-striped is-fullwidth is-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"has-text-black\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Replicate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Editing (%)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: results.rawData.flatMap(group => group.samples.map((s, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"has-text-black\",\n                  children: group.group\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"has-text-black\",\n                  children: s.file\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"has-text-black\",\n                  children: s.replicate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"has-text-black\",\n                  children: s.value.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)]\n              }, `${group.group}-${s.file}-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"zzfr1sMejOSiHjqWSxAUxIeiSqY=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analysis","_s","files","setFiles","metadata","setMetadata","results","setResults","loading","setLoading","error","setError","processingStatus","setProcessingStatus","API_URL","process","env","REACT_APP_API_URL","handleFileUpload","event","uploadedFiles","Array","from","target","validFiles","filter","file","name","endsWith","size","length","map","idx","fileName","group","replicate","handleMetadataChange","index","field","value","newMetadata","validateInput","processFiles","formData","FormData","forEach","append","JSON","stringify","m","i","response","fetch","method","body","ok","errorData","json","Error","data","groupedData","reduce","acc","d","isNaN","Mean_edit","Group","total","count","samples","push","File","Replicate","maxEdit","Math","max","chartMax","min","ceil","labels","Object","keys","groupMeans","replicatePoints","label","flatMap","groupIdx","s","x","y","type","backgroundColor","pointStyle","radius","showLine","datasets","borderColor","borderWidth","rawData","entries","info","err","console","message","chartOptions","maxY","responsive","plugins","legend","display","title","text","color","scales","beginAtZero","className","children","_jsxFileName","lineNumber","columnNumber","style","gap","accept","multiple","onChange","borderRadius","onClick","padding","border","disabled","maxWidth","meta","e","options","toFixed","_c","$RefreshReg$"],"sources":["/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\n\nconst Analysis = () => {\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n\n  const validateInput = () => true; // skip group validation now\n\n  const processFiles = async () => {\n    if (!validateInput()) return;\n\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', ''); // dummy\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n\n      const data = await response.json();\n\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = { total: 0, count: 0, samples: [] };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({ file: d.File, replicate: d.Replicate, value: d.Mean_edit });\n        return acc;\n      }, {});\n\n      const maxEdit = Math.max(...data.map(d => d.Mean_edit || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n\n      const labels = Object.keys(groupedData);\n      const groupMeans = labels.map(group => groupedData[group].total / groupedData[group].count);\n\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, groupIdx) =>\n          groupedData[group].samples.map(s => ({\n            x: group,\n            y: s.value\n          }))\n        ),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        showLine: false\n      };\n\n      setResults({\n        labels,\n        datasets: [\n          {\n            label: 'Mean Editing (%)',\n            data: groupMeans,\n            backgroundColor: '#C00000',\n            borderColor: '#C00000',\n            borderWidth: 1\n          },\n          replicatePoints\n        ],\n        rawData: Object.entries(groupedData).map(([group, info]) => ({\n          group,\n          ...info\n        })),\n        chartMax\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n\n  const chartOptions = (maxY) => ({\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n      title: { display: true, text: 'Editing by Group', color: '#C00000' },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: { display: true, text: 'Editing (%)' }\n      },\n      x: {\n        title: { display: true, text: 'Group' }\n      }\n    }\n  });\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"title is-3 has-text-black mb-4\">Sanger Analysis</h1>\n\n      {/* Upload and analyze row */}\n      <div className=\"is-flex is-align-items-center mb-5\" style={{ gap: '1rem' }}>\n        <div className=\"file has-name is-rounded\" style={{ backgroundColor: '#C00000' }}>\n          <label className=\"file-label\" style={{ color: 'white' }}>\n            <input\n              className=\"file-input\"\n              type=\"file\"\n              name=\"ab1files\"\n              accept=\".ab1\"\n              multiple\n              onChange={handleFileUpload}\n            />\n            <span className=\"file-cta\" style={{ backgroundColor: '#C00000', borderRadius: '20px', color: 'white' }}>\n              <span className=\"file-label\">Select Files</span>\n            </span>\n            <span className=\"file-name has-text-white\">\n              {files.length > 0 ? `${files.length} file(s)` : 'No files selected'}\n            </span>\n          </label>\n        </div>\n\n        <button\n          onClick={processFiles}\n          className=\"button\"\n          style={{\n            backgroundColor: '#C00000',\n            color: 'white',\n            borderRadius: '20px',\n            padding: '10px 20px',\n            border: 'none'\n          }}\n          disabled={loading}\n        >\n          {loading ? 'Processing...' : 'Analyze'}\n        </button>\n      </div>\n\n      {/* Metadata input table */}\n      {metadata.length > 0 && (\n        <div style={{ maxWidth: '50%', backgroundColor: 'white' }}>\n          <table className=\"table is-striped is-fullwidth mb-5\">\n            <thead>\n              <tr className=\"has-text-black\">\n                <th>File</th>\n                <th>Group</th>\n                <th>Replicate</th>\n              </tr>\n            </thead>\n            <tbody>\n              {metadata.map((meta, idx) => (\n                <tr key={idx}>\n                  <td className=\"has-text-black\">{meta.fileName}</td>\n                  <td><input className=\"input\" value={meta.group} onChange={e => handleMetadataChange(idx, 'group', e.target.value)} /></td>\n                  <td><input className=\"input\" value={meta.replicate} onChange={e => handleMetadataChange(idx, 'replicate', e.target.value)} /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {processingStatus && <p>{processingStatus}</p>}\n      {error && <div className=\"has-text-danger\">{error}</div>}\n\n      {/* Chart and Results */}\n      {results && (\n        <div className=\"columns mt-5\">\n          <div className=\"column\">\n            <Bar data={results} options={chartOptions(results.chartMax)} />\n          </div>\n          <div className=\"column\">\n            <div style={{ backgroundColor: 'white' }}>\n              <table className=\"table is-striped is-fullwidth is-bordered\">\n                <thead>\n                  <tr className=\"has-text-black\">\n                    <th>Group</th>\n                    <th>File</th>\n                    <th>Replicate</th>\n                    <th>Editing (%)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {results.rawData.flatMap(group =>\n                    group.samples.map((s, i) => (\n                      <tr key={`${group.group}-${s.file}-${i}`}>\n                        <td className=\"has-text-black\">{group.group}</td>\n                        <td className=\"has-text-black\">{s.file}</td>\n                        <td className=\"has-text-black\">{s.replicate}</td>\n                        <td className=\"has-text-black\">{s.value.toFixed(2)}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Analysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}