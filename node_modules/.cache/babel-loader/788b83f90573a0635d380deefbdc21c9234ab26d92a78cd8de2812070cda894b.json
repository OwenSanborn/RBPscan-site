{"ast":null,"code":"var _jsxFileName = \"/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Analysis = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [guideSeq, setGuideSeq] = useState('TTAGATTAGATTAGATTAGATTAGATTAGATTAGAC');\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => {\n      if (file.size > 10 * 1024 * 1024) {\n        setError(`File ${file.name} exceeds 10MB limit.`);\n        return false;\n      }\n      if (!file.name.endsWith('.ab1')) {\n        setError(`File ${file.name} must be an .ab1 file.`);\n        return false;\n      }\n      return true;\n    });\n    setFiles(validFiles);\n    setMetadata(validFiles.map(file => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n  const validateInput = () => {\n    if (!/^[ATCG]+$/.test(guideSeq)) {\n      setError('Guide sequence must contain only A, T, C, G characters.');\n      return false;\n    }\n    const missingGroups = metadata.filter(m => !m.group.trim());\n    if (missingGroups.length > 0) {\n      setError('All files must have a group name assigned.');\n      return false;\n    }\n    return true;\n  };\n  const processFiles = async () => {\n    if (!validateInput()) {\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading files...');\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', guideSeq);\n      formData.append('groups', JSON.stringify(metadata.map(m => m.group || 'Unknown')));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate || '1')));\n      setProcessingStatus('Analyzing sequences...');\n      const response = await fetch('http://localhost:3001/analyze', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setProcessingStatus('Processing results...');\n      if (!data || data.length === 0) {\n        throw new Error('No analysis results returned');\n      }\n\n      // Group data by group name\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) {\n          acc[group] = {\n            total: 0,\n            count: 0,\n            samples: []\n          };\n        }\n        acc[group].total += d.Mean_edit;\n        acc[group].count += 1;\n        acc[group].samples.push({\n          file: d.File,\n          replicate: d.Replicate,\n          value: d.Mean_edit\n        });\n        return acc;\n      }, {});\n\n      // Calculate mean for each group\n      const barData = Object.entries(groupedData).map(([group, {\n        total,\n        count,\n        samples\n      }]) => ({\n        group,\n        mean_edit: total / count,\n        sampleCount: count,\n        samples: samples\n      }));\n\n      // Format chart data\n      setResults({\n        labels: barData.map(d => d.group),\n        datasets: [{\n          label: 'Mean Editing (%)',\n          data: barData.map(d => d.mean_edit),\n          backgroundColor: '#C00000',\n          borderColor: '#C00000',\n          borderWidth: 1\n        }],\n        rawData: barData\n      });\n    } catch (err) {\n      console.error('Error in analysis:', err);\n      setError(`Error processing files: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Editing by Group',\n        color: '#C00000'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const value = context.parsed.y.toFixed(2);\n            const rawData = results.rawData[context.dataIndex];\n            return [`Mean Editing: ${value}%`, `Samples: ${rawData.sampleCount}`];\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Editing (%)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Group'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#C00000'\n      },\n      children: \"Analyze Sanger Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#C00000',\n          marginRight: '10px'\n        },\n        children: \"Guide Sequence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guideSeq,\n        onChange: e => setGuideSeq(e.target.value.toUpperCase()),\n        style: {\n          padding: '5px',\n          width: '300px',\n          borderRadius: '5px',\n          border: '1px solid #C00000'\n        },\n        placeholder: \"Enter guide sequence (e.g., ATCG...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '12px',\n          color: '#666'\n        },\n        children: \"Enter DNA sequence containing only A, T, C, G characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: '#C00000',\n          marginRight: '10px'\n        },\n        children: \"Upload .ab1 Files (max 10MB each):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \".ab1\",\n        onChange: handleFileUpload,\n        style: {\n          color: '#C00000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#C00000',\n          fontSize: '16px'\n        },\n        children: \"File Metadata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '12px',\n          color: '#666'\n        },\n        children: \"Assign each file to a group and replicate number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: 'flex',\n          fontWeight: 'bold'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '300px',\n            color: '#C00000'\n          },\n          children: \"File Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px',\n            color: '#C00000'\n          },\n          children: \"Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px',\n            color: '#C00000'\n          },\n          children: \"Replicate #\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), metadata.map((meta, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '300px',\n            color: '#C00000',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          },\n          children: meta.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Group\",\n            value: meta.group,\n            onChange: e => handleMetadataChange(idx, 'group', e.target.value),\n            style: {\n              padding: '5px',\n              borderRadius: '5px',\n              width: '120px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"1\",\n            value: meta.replicate,\n            onChange: e => handleMetadataChange(idx, 'replicate', e.target.value),\n            style: {\n              padding: '5px',\n              borderRadius: '5px',\n              width: '120px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processFiles,\n        style: {\n          backgroundColor: '#C00000',\n          color: 'white',\n          padding: '10px 20px',\n          borderRadius: '20px',\n          border: 'none',\n          cursor: loading ? 'not-allowed' : 'pointer',\n          opacity: loading ? 0.7 : 1\n        },\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          color: '#C00000'\n        },\n        children: processingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '20px',\n        padding: '10px',\n        backgroundColor: '#FFEEEE',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#C00000'\n        },\n        children: \"Analysis Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: results,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: '#C00000'\n          },\n          children: \"Detailed Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                backgroundColor: '#F0F0F0'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  textAlign: 'left'\n                },\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  textAlign: 'left'\n                },\n                children: \"File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  textAlign: 'left'\n                },\n                children: \"Replicate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  textAlign: 'right'\n                },\n                children: \"Editing (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.rawData.flatMap(group => group.samples.map((sample, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd'\n                },\n                children: group.group\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd'\n                },\n                children: sample.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd'\n                },\n                children: sample.replicate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '8px',\n                  border: '1px solid #ddd',\n                  textAlign: 'right'\n                },\n                children: sample.value.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this)]\n            }, `${group.group}-${sample.file}-${i}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"7dlS30TVKGZBIYB/7EYpSJZulRk=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analysis","_s","files","setFiles","guideSeq","setGuideSeq","metadata","setMetadata","results","setResults","loading","setLoading","error","setError","processingStatus","setProcessingStatus","handleFileUpload","event","uploadedFiles","Array","from","target","validFiles","filter","file","size","name","endsWith","map","fileName","group","replicate","handleMetadataChange","index","field","value","newMetadata","validateInput","test","missingGroups","m","trim","length","processFiles","formData","FormData","forEach","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","statusText","data","groupedData","reduce","acc","d","isNaN","Mean_edit","Group","total","count","samples","push","File","Replicate","barData","Object","entries","mean_edit","sampleCount","labels","datasets","label","backgroundColor","borderColor","borderWidth","rawData","err","console","message","chartOptions","responsive","plugins","legend","display","title","text","color","tooltip","callbacks","context","parsed","y","toFixed","dataIndex","scales","beginAtZero","x","className","style","padding","children","_jsxFileName","lineNumber","columnNumber","marginBottom","marginRight","type","onChange","e","toUpperCase","width","borderRadius","border","placeholder","fontSize","multiple","accept","fontWeight","meta","idx","overflow","textOverflow","onClick","cursor","opacity","disabled","marginTop","height","options","borderCollapse","textAlign","flatMap","sample","i","_c","$RefreshReg$"],"sources":["/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst Analysis = () => {\n  const [files, setFiles] = useState([]);\n  const [guideSeq, setGuideSeq] = useState('TTAGATTAGATTAGATTAGATTAGATTAGATTAGAC');\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => {\n      if (file.size > 10 * 1024 * 1024) {\n        setError(`File ${file.name} exceeds 10MB limit.`);\n        return false;\n      }\n      if (!file.name.endsWith('.ab1')) {\n        setError(`File ${file.name} must be an .ab1 file.`);\n        return false;\n      }\n      return true;\n    });\n    \n    setFiles(validFiles);\n    setMetadata(validFiles.map(file => ({ fileName: file.name, group: '', replicate: '1' })));\n    setError(null);\n    setResults(null);\n  };\n\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n\n  const validateInput = () => {\n    if (!/^[ATCG]+$/.test(guideSeq)) {\n      setError('Guide sequence must contain only A, T, C, G characters.');\n      return false;\n    }\n\n    const missingGroups = metadata.filter(m => !m.group.trim());\n    if (missingGroups.length > 0) {\n      setError('All files must have a group name assigned.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const processFiles = async () => {\n    if (!validateInput()) {\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading files...');\n\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', guideSeq);\n      formData.append('groups', JSON.stringify(metadata.map(m => m.group || 'Unknown')));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate || '1')));\n\n      setProcessingStatus('Analyzing sequences...');\n      const response = await fetch('http://localhost:3001/analyze', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Server error: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      setProcessingStatus('Processing results...');\n\n      if (!data || data.length === 0) {\n        throw new Error('No analysis results returned');\n      }\n\n      // Group data by group name\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        \n        const group = d.Group || 'Unknown';\n        if (!acc[group]) {\n          acc[group] = { total: 0, count: 0, samples: [] };\n        }\n        acc[group].total += d.Mean_edit;\n        acc[group].count += 1;\n        acc[group].samples.push({\n          file: d.File,\n          replicate: d.Replicate,\n          value: d.Mean_edit\n        });\n        return acc;\n      }, {});\n\n      // Calculate mean for each group\n      const barData = Object.entries(groupedData).map(([group, { total, count, samples }]) => ({\n        group,\n        mean_edit: total / count,\n        sampleCount: count,\n        samples: samples\n      }));\n\n      // Format chart data\n      setResults({\n        labels: barData.map(d => d.group),\n        datasets: [{\n          label: 'Mean Editing (%)',\n          data: barData.map(d => d.mean_edit),\n          backgroundColor: '#C00000',\n          borderColor: '#C00000',\n          borderWidth: 1\n        }],\n        rawData: barData\n      });\n    } catch (err) {\n      console.error('Error in analysis:', err);\n      setError(`Error processing files: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: { \n      legend: { display: false }, \n      title: { display: true, text: 'Editing by Group', color: '#C00000' },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const value = context.parsed.y.toFixed(2);\n            const rawData = results.rawData[context.dataIndex];\n            return [`Mean Editing: ${value}%`, `Samples: ${rawData.sampleCount}`];\n          }\n        }\n      }\n    },\n    scales: { \n      y: { \n        beginAtZero: true, \n        title: { display: true, text: 'Editing (%)' } \n      }, \n      x: { \n        title: { display: true, text: 'Group' } \n      } \n    }\n  };\n\n  return (\n    <div className=\"container\" style={{ padding: '20px' }}>\n      <h2 style={{ color: '#C00000' }}>Analyze Sanger Data</h2>\n      \n      <div style={{ marginBottom: '20px' }}>\n        <label style={{ color: '#C00000', marginRight: '10px' }}>Guide Sequence:</label>\n        <input\n          type=\"text\"\n          value={guideSeq}\n          onChange={(e) => setGuideSeq(e.target.value.toUpperCase())}\n          style={{ padding: '5px', width: '300px', borderRadius: '5px', border: '1px solid #C00000' }}\n          placeholder=\"Enter guide sequence (e.g., ATCG...)\"\n        />\n        <p style={{ fontSize: '12px', color: '#666' }}>Enter DNA sequence containing only A, T, C, G characters</p>\n      </div>\n      \n      <div style={{ marginBottom: '20px' }}>\n        <label style={{ color: '#C00000', marginRight: '10px' }}>Upload .ab1 Files (max 10MB each):</label>\n        <input\n          type=\"file\"\n          multiple\n          accept=\".ab1\"\n          onChange={handleFileUpload}\n          style={{ color: '#C00000' }}\n        />\n      </div>\n      \n      {files.length > 0 && (\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ color: '#C00000', fontSize: '16px' }}>File Metadata</h3>\n          <p style={{ fontSize: '12px', color: '#666' }}>Assign each file to a group and replicate number</p>\n          \n          <div style={{ marginBottom: '10px', display: 'flex', fontWeight: 'bold' }}>\n            <div style={{ width: '300px', color: '#C00000' }}>File Name</div>\n            <div style={{ width: '150px', color: '#C00000' }}>Group</div>\n            <div style={{ width: '150px', color: '#C00000' }}>Replicate #</div>\n          </div>\n          \n          {metadata.map((meta, idx) => (\n            <div key={idx} style={{ marginBottom: '10px', display: 'flex' }}>\n              <div style={{ width: '300px', color: '#C00000', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                {meta.fileName}\n              </div>\n              <div style={{ width: '150px' }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Group\"\n                  value={meta.group}\n                  onChange={(e) => handleMetadataChange(idx, 'group', e.target.value)}\n                  style={{ padding: '5px', borderRadius: '5px', width: '120px' }}\n                />\n              </div>\n              <div style={{ width: '150px' }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"1\"\n                  value={meta.replicate}\n                  onChange={(e) => handleMetadataChange(idx, 'replicate', e.target.value)}\n                  style={{ padding: '5px', borderRadius: '5px', width: '120px' }}\n                />\n              </div>\n            </div>\n          ))}\n          \n          <button\n            onClick={processFiles}\n            style={{\n              backgroundColor: '#C00000',\n              color: 'white',\n              padding: '10px 20px',\n              borderRadius: '20px',\n              border: 'none',\n              cursor: loading ? 'not-allowed' : 'pointer',\n              opacity: loading ? 0.7 : 1\n            }}\n            disabled={loading}\n          >\n            {loading ? 'Processing...' : 'Analyze'}\n          </button>\n          \n          {processingStatus && (\n            <p style={{ marginTop: '10px', color: '#C00000' }}>{processingStatus}</p>\n          )}\n        </div>\n      )}\n      \n      {error && (\n        <div style={{ color: 'red', marginBottom: '20px', padding: '10px', backgroundColor: '#FFEEEE', borderRadius: '5px' }}>\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n      \n      {results && (\n        <div>\n          <h3 style={{ color: '#C00000' }}>Analysis Results</h3>\n          <div style={{ height: '400px', width: '100%' }}>\n            <Bar data={results} options={chartOptions} />\n          </div>\n          \n          <div style={{ marginTop: '20px' }}>\n            <h4 style={{ color: '#C00000' }}>Detailed Results</h4>\n            <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n              <thead>\n                <tr style={{ backgroundColor: '#F0F0F0' }}>\n                  <th style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'left' }}>Group</th>\n                  <th style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'left' }}>File</th>\n                  <th style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'left' }}>Replicate</th>\n                  <th style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'right' }}>Editing (%)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {results.rawData.flatMap(group => \n                  group.samples.map((sample, i) => (\n                    <tr key={`${group.group}-${sample.file}-${i}`}>\n                      <td style={{ padding: '8px', border: '1px solid #ddd' }}>{group.group}</td>\n                      <td style={{ padding: '8px', border: '1px solid #ddd' }}>{sample.file}</td>\n                      <td style={{ padding: '8px', border: '1px solid #ddd' }}>{sample.replicate}</td>\n                      <td style={{ padding: '8px', border: '1px solid #ddd', textAlign: 'right' }}>\n                        {sample.value.toFixed(2)}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Analysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC3G,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpBR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,sCAAsC,CAAC;EAChF,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAM6B,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACnB,KAAK,CAAC;IACpD,MAAMoB,UAAU,GAAGJ,aAAa,CAACK,MAAM,CAACC,IAAI,IAAI;MAC9C,IAAIA,IAAI,CAACC,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE;QAChCZ,QAAQ,CAAC,QAAQW,IAAI,CAACE,IAAI,sBAAsB,CAAC;QACjD,OAAO,KAAK;MACd;MACA,IAAI,CAACF,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/Bd,QAAQ,CAAC,QAAQW,IAAI,CAACE,IAAI,wBAAwB,CAAC;QACnD,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IAEFvB,QAAQ,CAACmB,UAAU,CAAC;IACpBf,WAAW,CAACe,UAAU,CAACM,GAAG,CAACJ,IAAI,KAAK;MAAEK,QAAQ,EAAEL,IAAI,CAACE,IAAI;MAAEI,KAAK,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;IACzFlB,QAAQ,CAAC,IAAI,CAAC;IACdJ,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,MAAMuB,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACpD,MAAMC,WAAW,GAAG,CAAC,GAAG9B,QAAQ,CAAC;IACjC8B,WAAW,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IACjC5B,WAAW,CAAC6B,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAAC,WAAW,CAACC,IAAI,CAAClC,QAAQ,CAAC,EAAE;MAC/BS,QAAQ,CAAC,yDAAyD,CAAC;MACnE,OAAO,KAAK;IACd;IAEA,MAAM0B,aAAa,GAAGjC,QAAQ,CAACiB,MAAM,CAACiB,CAAC,IAAI,CAACA,CAAC,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,CAAC;IAC3D,IAAIF,aAAa,CAACG,MAAM,GAAG,CAAC,EAAE;MAC5B7B,QAAQ,CAAC,4CAA4C,CAAC;MACtD,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,MAAM8B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,aAAa,CAAC,CAAC,EAAE;MACpB;IACF;IAEA1B,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,mBAAmB,CAAC,oBAAoB,CAAC;IAEzC,IAAI;MACF,MAAM6B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/B3C,KAAK,CAAC4C,OAAO,CAACtB,IAAI,IAAIoB,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAEvB,IAAI,CAAC,CAAC;MACrDoB,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAE3C,QAAQ,CAAC;MACtCwC,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACsB,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACV,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC;MAClFc,QAAQ,CAACG,MAAM,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAAC3C,QAAQ,CAACsB,GAAG,CAACY,CAAC,IAAIA,CAAC,CAACT,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;MAEpFhB,mBAAmB,CAAC,wBAAwB,CAAC;MAC7C,MAAMmC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAET;MACR,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAAC3C,KAAK,IAAI,iBAAiBsC,QAAQ,CAACQ,UAAU,EAAE,CAAC;MAC5E;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCzC,mBAAmB,CAAC,uBAAuB,CAAC;MAE5C,IAAI,CAAC4C,IAAI,IAAIA,IAAI,CAACjB,MAAM,KAAK,CAAC,EAAE;QAC9B,MAAM,IAAIe,KAAK,CAAC,8BAA8B,CAAC;MACjD;;MAEA;MACA,MAAMG,WAAW,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;QAC1C,IAAIA,CAAC,CAACN,KAAK,IAAIO,KAAK,CAACD,CAAC,CAACE,SAAS,CAAC,EAAE,OAAOH,GAAG;QAE7C,MAAMhC,KAAK,GAAGiC,CAAC,CAACG,KAAK,IAAI,SAAS;QAClC,IAAI,CAACJ,GAAG,CAAChC,KAAK,CAAC,EAAE;UACfgC,GAAG,CAAChC,KAAK,CAAC,GAAG;YAAEqC,KAAK,EAAE,CAAC;YAAEC,KAAK,EAAE,CAAC;YAAEC,OAAO,EAAE;UAAG,CAAC;QAClD;QACAP,GAAG,CAAChC,KAAK,CAAC,CAACqC,KAAK,IAAIJ,CAAC,CAACE,SAAS;QAC/BH,GAAG,CAAChC,KAAK,CAAC,CAACsC,KAAK,IAAI,CAAC;QACrBN,GAAG,CAAChC,KAAK,CAAC,CAACuC,OAAO,CAACC,IAAI,CAAC;UACtB9C,IAAI,EAAEuC,CAAC,CAACQ,IAAI;UACZxC,SAAS,EAAEgC,CAAC,CAACS,SAAS;UACtBrC,KAAK,EAAE4B,CAAC,CAACE;QACX,CAAC,CAAC;QACF,OAAOH,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEN;MACA,MAAMW,OAAO,GAAGC,MAAM,CAACC,OAAO,CAACf,WAAW,CAAC,CAAChC,GAAG,CAAC,CAAC,CAACE,KAAK,EAAE;QAAEqC,KAAK;QAAEC,KAAK;QAAEC;MAAQ,CAAC,CAAC,MAAM;QACvFvC,KAAK;QACL8C,SAAS,EAAET,KAAK,GAAGC,KAAK;QACxBS,WAAW,EAAET,KAAK;QAClBC,OAAO,EAAEA;MACX,CAAC,CAAC,CAAC;;MAEH;MACA5D,UAAU,CAAC;QACTqE,MAAM,EAAEL,OAAO,CAAC7C,GAAG,CAACmC,CAAC,IAAIA,CAAC,CAACjC,KAAK,CAAC;QACjCiD,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,kBAAkB;UACzBrB,IAAI,EAAEc,OAAO,CAAC7C,GAAG,CAACmC,CAAC,IAAIA,CAAC,CAACa,SAAS,CAAC;UACnCK,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,WAAW,EAAE;QACf,CAAC,CAAC;QACFC,OAAO,EAAEX;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAAC1E,KAAK,CAAC,oBAAoB,EAAEyE,GAAG,CAAC;MACxCxE,QAAQ,CAAC,2BAA2BwE,GAAG,CAACE,OAAO,EAAE,CAAC;IACpD,CAAC,SAAS;MACR5E,UAAU,CAAC,KAAK,CAAC;MACjBI,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC;EAED,MAAMyE,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC;MAC1BC,KAAK,EAAE;QAAED,OAAO,EAAE,IAAI;QAAEE,IAAI,EAAE,kBAAkB;QAAEC,KAAK,EAAE;MAAU,CAAC;MACpEC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTjB,KAAK,EAAGkB,OAAO,IAAK;YAClB,MAAM/D,KAAK,GAAG+D,OAAO,CAACC,MAAM,CAACC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;YACzC,MAAMjB,OAAO,GAAG5E,OAAO,CAAC4E,OAAO,CAACc,OAAO,CAACI,SAAS,CAAC;YAClD,OAAO,CAAC,iBAAiBnE,KAAK,GAAG,EAAE,YAAYiD,OAAO,CAACP,WAAW,EAAE,CAAC;UACvE;QACF;MACF;IACF,CAAC;IACD0B,MAAM,EAAE;MACNH,CAAC,EAAE;QACDI,WAAW,EAAE,IAAI;QACjBX,KAAK,EAAE;UAAED,OAAO,EAAE,IAAI;UAAEE,IAAI,EAAE;QAAc;MAC9C,CAAC;MACDW,CAAC,EAAE;QACDZ,KAAK,EAAE;UAAED,OAAO,EAAE,IAAI;UAAEE,IAAI,EAAE;QAAQ;MACxC;IACF;EACF,CAAC;EAED,oBACEhG,OAAA;IAAK4G,SAAS,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACpD/G,OAAA;MAAI6G,KAAK,EAAE;QAAEZ,KAAK,EAAE;MAAU,CAAE;MAAAc,QAAA,EAAC;IAAmB;MAAAhF,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzDlH,OAAA;MAAK6G,KAAK,EAAE;QAAEM,YAAY,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBACnC/G,OAAA;QAAO6G,KAAK,EAAE;UAAEZ,KAAK,EAAE,SAAS;UAAEmB,WAAW,EAAE;QAAO,CAAE;QAAAL,QAAA,EAAC;MAAe;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChFlH,OAAA;QACEqH,IAAI,EAAC,MAAM;QACXhF,KAAK,EAAE/B,QAAS;QAChBgH,QAAQ,EAAGC,CAAC,IAAKhH,WAAW,CAACgH,CAAC,CAAChG,MAAM,CAACc,KAAK,CAACmF,WAAW,CAAC,CAAC,CAAE;QAC3DX,KAAK,EAAE;UAAEC,OAAO,EAAE,KAAK;UAAEW,KAAK,EAAE,OAAO;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAoB,CAAE;QAC5FC,WAAW,EAAC;MAAsC;QAAA7F,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFlH,OAAA;QAAG6G,KAAK,EAAE;UAAEgB,QAAQ,EAAE,MAAM;UAAE5B,KAAK,EAAE;QAAO,CAAE;QAAAc,QAAA,EAAC;MAAwD;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAnF,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,eAENlH,OAAA;MAAK6G,KAAK,EAAE;QAAEM,YAAY,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBACnC/G,OAAA;QAAO6G,KAAK,EAAE;UAAEZ,KAAK,EAAE,SAAS;UAAEmB,WAAW,EAAE;QAAO,CAAE;QAAAL,QAAA,EAAC;MAAkC;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnGlH,OAAA;QACEqH,IAAI,EAAC,MAAM;QACXS,QAAQ;QACRC,MAAM,EAAC,MAAM;QACbT,QAAQ,EAAEpG,gBAAiB;QAC3B2F,KAAK,EAAE;UAAEZ,KAAK,EAAE;QAAU;MAAE;QAAAlE,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAnF,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL9G,KAAK,CAACwC,MAAM,GAAG,CAAC,iBACf5C,OAAA;MAAK6G,KAAK,EAAE;QAAEM,YAAY,EAAE;MAAO,CAAE;MAAAJ,QAAA,gBACnC/G,OAAA;QAAI6G,KAAK,EAAE;UAAEZ,KAAK,EAAE,SAAS;UAAE4B,QAAQ,EAAE;QAAO,CAAE;QAAAd,QAAA,EAAC;MAAa;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrElH,OAAA;QAAG6G,KAAK,EAAE;UAAEgB,QAAQ,EAAE,MAAM;UAAE5B,KAAK,EAAE;QAAO,CAAE;QAAAc,QAAA,EAAC;MAAgD;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEnGlH,OAAA;QAAK6G,KAAK,EAAE;UAAEM,YAAY,EAAE,MAAM;UAAErB,OAAO,EAAE,MAAM;UAAEkC,UAAU,EAAE;QAAO,CAAE;QAAAjB,QAAA,gBACxE/G,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAExB,KAAK,EAAE;UAAU,CAAE;UAAAc,QAAA,EAAC;QAAS;UAAAhF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjElH,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAExB,KAAK,EAAE;UAAU,CAAE;UAAAc,QAAA,EAAC;QAAK;UAAAhF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DlH,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAExB,KAAK,EAAE;UAAU,CAAE;UAAAc,QAAA,EAAC;QAAW;UAAAhF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAnF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,EAEL1G,QAAQ,CAACsB,GAAG,CAAC,CAACmG,IAAI,EAAEC,GAAG,kBACtBlI,OAAA;QAAe6G,KAAK,EAAE;UAAEM,YAAY,EAAE,MAAM;UAAErB,OAAO,EAAE;QAAO,CAAE;QAAAiB,QAAA,gBAC9D/G,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE,OAAO;YAAExB,KAAK,EAAE,SAAS;YAAEkC,QAAQ,EAAE,QAAQ;YAAEC,YAAY,EAAE;UAAW,CAAE;UAAArB,QAAA,EAC5FkB,IAAI,CAAClG;QAAQ;UAAAA,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACNlH,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAQ,CAAE;UAAAV,QAAA,eAC7B/G,OAAA;YACEqH,IAAI,EAAC,MAAM;YACXO,WAAW,EAAC,OAAO;YACnBvF,KAAK,EAAE4F,IAAI,CAACjG,KAAM;YAClBsF,QAAQ,EAAGC,CAAC,IAAKrF,oBAAoB,CAACgG,GAAG,EAAE,OAAO,EAAEX,CAAC,CAAChG,MAAM,CAACc,KAAK,CAAE;YACpEwE,KAAK,EAAE;cAAEC,OAAO,EAAE,KAAK;cAAEY,YAAY,EAAE,KAAK;cAAED,KAAK,EAAE;YAAQ;UAAE;YAAA1F,QAAA,EAAAiF,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE;QAAC;UAAAnF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNlH,OAAA;UAAK6G,KAAK,EAAE;YAAEY,KAAK,EAAE;UAAQ,CAAE;UAAAV,QAAA,eAC7B/G,OAAA;YACEqH,IAAI,EAAC,MAAM;YACXO,WAAW,EAAC,GAAG;YACfvF,KAAK,EAAE4F,IAAI,CAAChG,SAAU;YACtBqF,QAAQ,EAAGC,CAAC,IAAKrF,oBAAoB,CAACgG,GAAG,EAAE,WAAW,EAAEX,CAAC,CAAChG,MAAM,CAACc,KAAK,CAAE;YACxEwE,KAAK,EAAE;cAAEC,OAAO,EAAE,KAAK;cAAEY,YAAY,EAAE,KAAK;cAAED,KAAK,EAAE;YAAQ;UAAE;YAAA1F,QAAA,EAAAiF,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE;QAAC;UAAAnF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GArBEgB,GAAG;QAAAnG,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBR,CACN,CAAC,eAEFlH,OAAA;QACEqI,OAAO,EAAExF,YAAa;QACtBgE,KAAK,EAAE;UACL1B,eAAe,EAAE,SAAS;UAC1Bc,KAAK,EAAE,OAAO;UACda,OAAO,EAAE,WAAW;UACpBY,YAAY,EAAE,MAAM;UACpBC,MAAM,EAAE,MAAM;UACdW,MAAM,EAAE1H,OAAO,GAAG,aAAa,GAAG,SAAS;UAC3C2H,OAAO,EAAE3H,OAAO,GAAG,GAAG,GAAG;QAC3B,CAAE;QACF4H,QAAQ,EAAE5H,OAAQ;QAAAmG,QAAA,EAEjBnG,OAAO,GAAG,eAAe,GAAG;MAAS;QAAAmB,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EAERlG,gBAAgB,iBACfhB,OAAA;QAAG6G,KAAK,EAAE;UAAE4B,SAAS,EAAE,MAAM;UAAExC,KAAK,EAAE;QAAU,CAAE;QAAAc,QAAA,EAAE/F;MAAgB;QAAAe,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACzE;IAAA;MAAAnF,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEApG,KAAK,iBACJd,OAAA;MAAK6G,KAAK,EAAE;QAAEZ,KAAK,EAAE,KAAK;QAAEkB,YAAY,EAAE,MAAM;QAAEL,OAAO,EAAE,MAAM;QAAE3B,eAAe,EAAE,SAAS;QAAEuC,YAAY,EAAE;MAAM,CAAE;MAAAX,QAAA,gBACnH/G,OAAA;QAAA+G,QAAA,EAAQ;MAAM;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACpG,KAAK;IAAA;MAAAiB,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACN,EAEAxG,OAAO,iBACNV,OAAA;MAAA+G,QAAA,gBACE/G,OAAA;QAAI6G,KAAK,EAAE;UAAEZ,KAAK,EAAE;QAAU,CAAE;QAAAc,QAAA,EAAC;MAAgB;QAAAhF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDlH,OAAA;QAAK6G,KAAK,EAAE;UAAE6B,MAAM,EAAE,OAAO;UAAEjB,KAAK,EAAE;QAAO,CAAE;QAAAV,QAAA,eAC7C/G,OAAA,CAACV,GAAG;UAACuE,IAAI,EAAEnD,OAAQ;UAACiI,OAAO,EAAEjD;QAAa;UAAA3D,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAnF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAENlH,OAAA;QAAK6G,KAAK,EAAE;UAAE4B,SAAS,EAAE;QAAO,CAAE;QAAA1B,QAAA,gBAChC/G,OAAA;UAAI6G,KAAK,EAAE;YAAEZ,KAAK,EAAE;UAAU,CAAE;UAAAc,QAAA,EAAC;QAAgB;UAAAhF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtDlH,OAAA;UAAO6G,KAAK,EAAE;YAAEY,KAAK,EAAE,MAAM;YAAEmB,cAAc,EAAE;UAAW,CAAE;UAAA7B,QAAA,gBAC1D/G,OAAA;YAAA+G,QAAA,eACE/G,OAAA;cAAI6G,KAAK,EAAE;gBAAE1B,eAAe,EAAE;cAAU,CAAE;cAAA4B,QAAA,gBACxC/G,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE,gBAAgB;kBAAEkB,SAAS,EAAE;gBAAO,CAAE;gBAAA9B,QAAA,EAAC;cAAK;gBAAAhF,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtFlH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE,gBAAgB;kBAAEkB,SAAS,EAAE;gBAAO,CAAE;gBAAA9B,QAAA,EAAC;cAAI;gBAAAhF,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrFlH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE,gBAAgB;kBAAEkB,SAAS,EAAE;gBAAO,CAAE;gBAAA9B,QAAA,EAAC;cAAS;gBAAAhF,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1FlH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE,gBAAgB;kBAAEkB,SAAS,EAAE;gBAAQ,CAAE;gBAAA9B,QAAA,EAAC;cAAW;gBAAAhF,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAnF,QAAA,EAAAiF,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3F;UAAC;YAAAnF,QAAA,EAAAiF,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRlH,OAAA;YAAA+G,QAAA,EACGrG,OAAO,CAAC4E,OAAO,CAACwD,OAAO,CAAC9G,KAAK,IAC5BA,KAAK,CAACuC,OAAO,CAACzC,GAAG,CAAC,CAACiH,MAAM,EAAEC,CAAC,kBAC1BhJ,OAAA;cAAA+G,QAAA,gBACE/G,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE;gBAAiB,CAAE;gBAAAZ,QAAA,EAAE/E,KAAK,CAACA;cAAK;gBAAAD,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3ElH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE;gBAAiB,CAAE;gBAAAZ,QAAA,EAAEgC,MAAM,CAACrH;cAAI;gBAAAK,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3ElH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE;gBAAiB,CAAE;gBAAAZ,QAAA,EAAEgC,MAAM,CAAC9G;cAAS;gBAAAF,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChFlH,OAAA;gBAAI6G,KAAK,EAAE;kBAAEC,OAAO,EAAE,KAAK;kBAAEa,MAAM,EAAE,gBAAgB;kBAAEkB,SAAS,EAAE;gBAAQ,CAAE;gBAAA9B,QAAA,EACzEgC,MAAM,CAAC1G,KAAK,CAACkE,OAAO,CAAC,CAAC;cAAC;gBAAAxE,QAAA,EAAAiF,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YAAA,GANE,GAAGlF,KAAK,CAACA,KAAK,IAAI+G,MAAM,CAACrH,IAAI,IAAIsH,CAAC,EAAE;cAAAjH,QAAA,EAAAiF,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOzC,CACL,CACH;UAAC;YAAAnF,QAAA,EAAAiF,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAnF,QAAA,EAAAiF,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAnF,QAAA,EAAAiF,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAnF,QAAA,EAAAiF,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAnF,QAAA,EAAAiF,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/G,EAAA,CA/RID,QAAQ;AAAA+I,EAAA,GAAR/I,QAAQ;AAiSd,eAAeA,QAAQ;AAAC,IAAA+I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}