{"ast":null,"code":"var _jsxFileName = \"/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\nconst Analysis = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1',\n      editing: null\n    })));\n    setError(null);\n    setResults(null);\n  };\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n  const processFiles = async () => {\n    if (!metadata.length) return;\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', '');\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group.trim() || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n      const data = await response.json();\n      const updatedMetadata = metadata.map((meta, idx) => {\n        var _matched$Mean_edit;\n        const matched = data.find(d => d.File && d.File.includes(meta.fileName));\n        return {\n          ...meta,\n          group: meta.group || `${idx + 1}`,\n          editing: (_matched$Mean_edit = matched === null || matched === void 0 ? void 0 : matched.Mean_edit) !== null && _matched$Mean_edit !== void 0 ? _matched$Mean_edit : null\n        };\n      });\n      const grouped = updatedMetadata.reduce((acc, m) => {\n        const group = m.group;\n        if (!acc[group]) acc[group] = {\n          total: 0,\n          count: 0,\n          samples: []\n        };\n        if (m.editing != null) {\n          acc[group].total += m.editing;\n          acc[group].count++;\n        }\n        acc[group].samples.push(m);\n        return acc;\n      }, {});\n      const labels = Object.keys(grouped);\n      const maxEdit = Math.max(...updatedMetadata.map(m => m.editing || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n      const groupMeans = labels.map(group => grouped[group].total / grouped[group].count);\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, i) => grouped[group].samples.map(s => ({\n          x: labels[i],\n          y: s.editing\n        }))),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        order: 2\n      };\n      const barData = {\n        label: 'Mean Editing (%)',\n        data: groupMeans,\n        backgroundColor: '#C00000',\n        borderColor: '#C00000',\n        borderWidth: 1,\n        order: 1\n      };\n      setMetadata(updatedMetadata);\n      setResults({\n        labels,\n        datasets: [barData, replicatePoints],\n        chartMax\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n  const chartOptions = maxY => ({\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Editing by Group',\n        color: '#C00000'\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Group'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: {\n          display: true,\n          text: 'Editing (%)'\n        }\n      }\n    }\n  });\n  const exportToCSV = () => {\n    const rows = [[\"File\", \"Group\", \"Replicate\", \"Editing (%)\"]];\n    metadata.forEach(m => {\n      var _m$editing$toFixed, _m$editing;\n      rows.push([m.fileName, m.group, m.replicate, (_m$editing$toFixed = (_m$editing = m.editing) === null || _m$editing === void 0 ? void 0 : _m$editing.toFixed(2)) !== null && _m$editing$toFixed !== void 0 ? _m$editing$toFixed : '']);\n    });\n    const csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(r => r.join(\",\")).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.href = encodedUri;\n    link.download = \"sanger_results.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-3 has-text-black mb-4\",\n      children: \"Sanger Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file has-name is-rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"file-input\",\n              type: \"file\",\n              accept: \".ab1\",\n              multiple: true,\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-cta\",\n              style: {\n                backgroundColor: '#C00000',\n                color: 'white',\n                borderRadius: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-label\",\n                children: \"Select Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#777',\n                paddingLeft: '10px'\n              },\n              children: files.length > 0 ? `${files.length} file(s)` : 'No files selected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processFiles,\n          className: \"button\",\n          style: {\n            backgroundColor: '#C00000',\n            color: 'white',\n            borderRadius: '20px',\n            padding: '10px 20px',\n            border: 'none'\n          },\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Analyze'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), metadata.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-bordered has-text-black\",\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            backgroundColor: '#e8e8e8'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Replicate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"% Editing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            backgroundColor: '#ffffff',\n            color: 'black'\n          },\n          children: metadata.map((meta, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: 'black'\n              },\n              children: meta.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                style: {\n                  backgroundColor: 'white',\n                  color: 'black'\n                },\n                value: meta.group,\n                onChange: e => handleMetadataChange(idx, 'group', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                style: {\n                  backgroundColor: 'white',\n                  color: 'black'\n                },\n                value: meta.replicate,\n                onChange: e => handleMetadataChange(idx, 'replicate', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: meta.editing != null ? meta.editing.toFixed(2) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), results && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: exportToCSV,\n          style: {\n            cursor: 'pointer',\n            color: '#C00000',\n            textDecoration: 'underline'\n          },\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: results,\n          options: chartOptions(results.chartMax)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: processingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"has-text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"zzfr1sMejOSiHjqWSxAUxIeiSqY=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analysis","_s","files","setFiles","metadata","setMetadata","results","setResults","loading","setLoading","error","setError","processingStatus","setProcessingStatus","API_URL","process","env","REACT_APP_API_URL","handleFileUpload","event","uploadedFiles","Array","from","target","validFiles","filter","file","name","endsWith","size","length","map","idx","fileName","group","replicate","editing","handleMetadataChange","index","field","value","newMetadata","processFiles","formData","FormData","forEach","append","JSON","stringify","m","i","trim","response","fetch","method","body","ok","errorData","json","Error","data","updatedMetadata","meta","_matched$Mean_edit","matched","find","d","File","includes","Mean_edit","grouped","reduce","acc","total","count","samples","push","labels","Object","keys","maxEdit","Math","max","chartMax","min","ceil","groupMeans","replicatePoints","label","flatMap","s","x","y","type","backgroundColor","pointStyle","radius","order","barData","borderColor","borderWidth","datasets","err","console","message","chartOptions","maxY","responsive","plugins","legend","display","title","text","color","scales","beginAtZero","exportToCSV","rows","_m$editing$toFixed","_m$editing","toFixed","csvContent","r","join","encodedUri","encodeURI","link","document","createElement","href","download","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","style","borderRadius","paddingLeft","onClick","padding","border","disabled","e","cursor","textDecoration","options","_c","$RefreshReg$"],"sources":["/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport '../App.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\n\nconst Analysis = () => {\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1',\n      editing: null\n    })));\n    setError(null);\n    setResults(null);\n  };\n\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n\n  const processFiles = async () => {\n    if (!metadata.length) return;\n\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', '');\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group.trim() || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n\n      const data = await response.json();\n\n      const updatedMetadata = metadata.map((meta, idx) => {\n        const matched = data.find(d => d.File && d.File.includes(meta.fileName));\n        return {\n          ...meta,\n          group: meta.group || `${idx + 1}`,\n          editing: matched?.Mean_edit ?? null\n        };\n      });\n\n      const grouped = updatedMetadata.reduce((acc, m) => {\n        const group = m.group;\n        if (!acc[group]) acc[group] = { total: 0, count: 0, samples: [] };\n        if (m.editing != null) {\n          acc[group].total += m.editing;\n          acc[group].count++;\n        }\n        acc[group].samples.push(m);\n        return acc;\n      }, {});\n\n      const labels = Object.keys(grouped);\n      const maxEdit = Math.max(...updatedMetadata.map(m => m.editing || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n\n      const groupMeans = labels.map(group => grouped[group].total / grouped[group].count);\n\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, i) =>\n          grouped[group].samples.map(s => ({\n            x: labels[i],\n            y: s.editing\n          }))\n        ),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        order: 2\n      };\n\n      const barData = {\n        label: 'Mean Editing (%)',\n        data: groupMeans,\n        backgroundColor: '#C00000',\n        borderColor: '#C00000',\n        borderWidth: 1,\n        order: 1\n      };\n\n      setMetadata(updatedMetadata);\n      setResults({ labels, datasets: [barData, replicatePoints], chartMax });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n\n  const chartOptions = (maxY) => ({\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n      title: { display: true, text: 'Editing by Group', color: '#C00000' },\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: { display: true, text: 'Group' }\n      },\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: { display: true, text: 'Editing (%)' }\n      }\n    }\n  });\n\n  const exportToCSV = () => {\n    const rows = [[\"File\", \"Group\", \"Replicate\", \"Editing (%)\"]];\n    metadata.forEach(m => {\n      rows.push([m.fileName, m.group, m.replicate, m.editing?.toFixed(2) ?? '']);\n    });\n\n    const csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(r => r.join(\",\")).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.href = encodedUri;\n    link.download = \"sanger_results.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <h1 className=\"title is-3 has-text-black mb-4\">Sanger Analysis</h1>\n\n      <div className=\"field is-grouped mb-5\">\n        <div className=\"control\">\n          <div className=\"file has-name is-rounded\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                accept=\".ab1\"\n                multiple\n                onChange={handleFileUpload}\n              />\n              <span className=\"file-cta\" style={{ backgroundColor: '#C00000', color: 'white', borderRadius: '20px' }}>\n                <span className=\"file-label\">Select Files</span>\n              </span>\n              <span style={{ color: '#777', paddingLeft: '10px' }}>\n                {files.length > 0 ? `${files.length} file(s)` : 'No files selected'}\n              </span>\n            </label>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <button\n            onClick={processFiles}\n            className=\"button\"\n            style={{\n              backgroundColor: '#C00000',\n              color: 'white',\n              borderRadius: '20px',\n              padding: '10px 20px',\n              border: 'none'\n            }}\n            disabled={loading}\n          >\n            {loading ? 'Processing...' : 'Analyze'}\n          </button>\n        </div>\n      </div>\n\n      {/* Table with file info and editing results */}\n      {metadata.length > 0 && (\n        <div>\n          <table className=\"table is-bordered has-text-black\" style={{ backgroundColor: 'white', color: 'black' }}>\n            <thead style={{ backgroundColor: '#e8e8e8' }}>\n              <tr>\n                <th style={{ color: 'black' }}>File</th>\n                <th style={{ color: 'black' }}>Group</th>\n                <th style={{ color: 'black' }}>Replicate</th>\n                <th style={{ color: 'black' }}>% Editing</th>\n              </tr>\n            </thead>\n            <tbody style={{ backgroundColor: '#ffffff', color: 'black' }}>\n              {metadata.map((meta, idx) => (\n                <tr key={idx}>\n                  <td style={{ color: 'black' }}>{meta.fileName}</td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      style={{ backgroundColor: 'white', color: 'black' }}\n                      value={meta.group}\n                      onChange={e => handleMetadataChange(idx, 'group', e.target.value)}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"input\"\n                      style={{ backgroundColor: 'white', color: 'black' }}\n                      value={meta.replicate}\n                      onChange={e => handleMetadataChange(idx, 'replicate', e.target.value)}\n                    />\n                  </td>\n                  <td>{meta.editing != null ? meta.editing.toFixed(2) : ''}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {results && (\n            <p>\n              <a onClick={exportToCSV} style={{ cursor: 'pointer', color: '#C00000', textDecoration: 'underline' }}>\n                Export to CSV\n              </a>\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* Chart */}\n      {results && (\n        <div className=\"columns mt-5\">\n          <div className=\"column is-half\">\n            <Bar data={results} options={chartOptions(results.chartMax)} />\n          </div>\n        </div>\n      )}\n\n      {processingStatus && <p>{processingStatus}</p>}\n      {error && <div className=\"has-text-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Analysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}