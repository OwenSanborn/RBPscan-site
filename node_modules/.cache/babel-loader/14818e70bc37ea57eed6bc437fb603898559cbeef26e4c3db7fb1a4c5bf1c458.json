{"ast":null,"code":"var _jsxFileName = \"/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Analysis = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n    setFiles(validFiles);\n    setMetadata(validFiles.map(file => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n  const validateInput = () => {\n    const missingGroups = metadata.some(m => !m.group.trim());\n    if (missingGroups) {\n      setError('Each file must have a group assigned.');\n      return false;\n    }\n    return true;\n  };\n  const processFiles = async () => {\n    if (!validateInput()) return;\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', ''); // dummy value\n      formData.append('groups', JSON.stringify(metadata.map(m => m.group)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n      const data = await response.json();\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = {\n          total: 0,\n          count: 0,\n          samples: []\n        };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({\n          file: d.File,\n          replicate: d.Replicate,\n          value: d.Mean_edit\n        });\n        return acc;\n      }, {});\n      const barData = Object.entries(groupedData).map(([group, {\n        total,\n        count,\n        samples\n      }]) => ({\n        group,\n        mean_edit: total / count,\n        sampleCount: count,\n        samples\n      }));\n      setResults({\n        labels: barData.map(d => d.group),\n        datasets: [{\n          label: 'Mean Editing (%)',\n          data: barData.map(d => d.mean_edit),\n          backgroundColor: '#C00000',\n          borderColor: '#C00000',\n          borderWidth: 1\n        }],\n        rawData: barData\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Editing by Group',\n        color: '#C00000'\n      },\n      tooltip: {\n        callbacks: {\n          label: context => {\n            const value = context.parsed.y.toFixed(2);\n            const rawData = results.rawData[context.dataIndex];\n            return [`Mean Editing: ${value}%`, `Samples: ${rawData.sampleCount}`];\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Editing (%)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Group'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-3 has-text-black mb-4\",\n      children: \"Sanger Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file has-name is-danger is-rounded mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"file-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-input\",\n          type: \"file\",\n          name: \"ab1files\",\n          accept: \".ab1\",\n          multiple: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-cta\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-label\",\n            children: \"Select Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: files.length > 0 ? `${files.length} file(s) selected` : 'No files selected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), metadata.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-fullwidth is-striped mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Replicate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: metadata.map((meta, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: meta.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              value: meta.group,\n              onChange: e => handleMetadataChange(idx, 'group', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              value: meta.replicate,\n              onChange: e => handleMetadataChange(idx, 'replicate', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processFiles,\n        className: \"button\",\n        style: {\n          backgroundColor: '#C00000',\n          color: 'white',\n          borderRadius: '20px',\n          padding: '10px 20px',\n          border: 'none'\n        },\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: processingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"has-text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: results,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table is-fullwidth is-striped is-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Replicate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Editing (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.rawData.flatMap(group => group.samples.map((s, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: group.group\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.replicate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: s.value.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this)]\n            }, `${group.group}-${s.file}-${i}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"zzfr1sMejOSiHjqWSxAUxIeiSqY=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analysis","_s","files","setFiles","metadata","setMetadata","results","setResults","loading","setLoading","error","setError","processingStatus","setProcessingStatus","API_URL","process","env","REACT_APP_API_URL","handleFileUpload","event","uploadedFiles","Array","from","target","validFiles","filter","file","name","endsWith","size","length","map","fileName","group","replicate","handleMetadataChange","index","field","value","newMetadata","validateInput","missingGroups","some","m","trim","processFiles","formData","FormData","forEach","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","data","groupedData","reduce","acc","d","isNaN","Mean_edit","Group","total","count","samples","push","File","Replicate","barData","Object","entries","mean_edit","sampleCount","labels","datasets","label","backgroundColor","borderColor","borderWidth","rawData","err","console","message","chartOptions","responsive","plugins","legend","display","title","text","color","tooltip","callbacks","context","parsed","y","toFixed","dataIndex","scales","beginAtZero","x","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","meta","idx","e","style","marginBottom","onClick","borderRadius","padding","border","disabled","options","flatMap","s","i","_c","$RefreshReg$"],"sources":["/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst Analysis = () => {\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n\n    setFiles(validFiles);\n    setMetadata(validFiles.map(file => ({ fileName: file.name, group: '', replicate: '1' })));\n    setError(null);\n    setResults(null);\n  };\n\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n\n  const validateInput = () => {\n    const missingGroups = metadata.some(m => !m.group.trim());\n    if (missingGroups) {\n      setError('Each file must have a group assigned.');\n      return false;\n    }\n    return true;\n  };\n\n  const processFiles = async () => {\n    if (!validateInput()) return;\n\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', ''); // dummy value\n      formData.append('groups', JSON.stringify(metadata.map(m => m.group)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n\n      const data = await response.json();\n\n      const groupedData = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = { total: 0, count: 0, samples: [] };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({ file: d.File, replicate: d.Replicate, value: d.Mean_edit });\n        return acc;\n      }, {});\n\n      const barData = Object.entries(groupedData).map(([group, { total, count, samples }]) => ({\n        group,\n        mean_edit: total / count,\n        sampleCount: count,\n        samples\n      }));\n\n      setResults({\n        labels: barData.map(d => d.group),\n        datasets: [{\n          label: 'Mean Editing (%)',\n          data: barData.map(d => d.mean_edit),\n          backgroundColor: '#C00000',\n          borderColor: '#C00000',\n          borderWidth: 1\n        }],\n        rawData: barData\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n      title: { display: true, text: 'Editing by Group', color: '#C00000' },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const value = context.parsed.y.toFixed(2);\n            const rawData = results.rawData[context.dataIndex];\n            return [`Mean Editing: ${value}%`, `Samples: ${rawData.sampleCount}`];\n          }\n        }\n      }\n    },\n    scales: {\n      y: { beginAtZero: true, title: { display: true, text: 'Editing (%)' } },\n      x: { title: { display: true, text: 'Group' } }\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"title is-3 has-text-black mb-4\">Sanger Analysis</h1>\n\n      {/* File upload button */}\n      <div className=\"file has-name is-danger is-rounded mb-5\">\n        <label className=\"file-label\">\n          <input\n            className=\"file-input\"\n            type=\"file\"\n            name=\"ab1files\"\n            accept=\".ab1\"\n            multiple\n            onChange={handleFileUpload}\n          />\n          <span className=\"file-cta\">\n            <span className=\"file-label\">Select Files</span>\n          </span>\n          <span className=\"file-name\">\n            {files.length > 0 ? `${files.length} file(s) selected` : 'No files selected'}\n          </span>\n        </label>\n      </div>\n\n      {/* Metadata table */}\n      {metadata.length > 0 && (\n        <table className=\"table is-fullwidth is-striped mb-5\">\n          <thead>\n            <tr>\n              <th>File Name</th>\n              <th>Group</th>\n              <th>Replicate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {metadata.map((meta, idx) => (\n              <tr key={idx}>\n                <td>{meta.fileName}</td>\n                <td>\n                  <input\n                    className=\"input\"\n                    value={meta.group}\n                    onChange={e => handleMetadataChange(idx, 'group', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    className=\"input\"\n                    value={meta.replicate}\n                    onChange={e => handleMetadataChange(idx, 'replicate', e.target.value)}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      {/* Analyze button */}\n      <div style={{ marginBottom: '30px' }}>\n        <button\n          onClick={processFiles}\n          className=\"button\"\n          style={{\n            backgroundColor: '#C00000',\n            color: 'white',\n            borderRadius: '20px',\n            padding: '10px 20px',\n            border: 'none'\n          }}\n          disabled={loading}\n        >\n          {loading ? 'Processing...' : 'Analyze'}\n        </button>\n      </div>\n\n      {processingStatus && <p>{processingStatus}</p>}\n      {error && <div className=\"has-text-danger\">{error}</div>}\n\n      {results && (\n        <div className=\"columns mt-5\">\n          <div className=\"column\">\n            <Bar data={results} options={chartOptions} />\n          </div>\n          <div className=\"column\">\n            <table className=\"table is-fullwidth is-striped is-bordered\">\n              <thead>\n                <tr>\n                  <th>Group</th>\n                  <th>File</th>\n                  <th>Replicate</th>\n                  <th>Editing (%)</th>\n                </tr>\n              </thead>\n              <tbody>\n                {results.rawData.flatMap(group =>\n                  group.samples.map((s, i) => (\n                    <tr key={`${group.group}-${s.file}-${i}`}>\n                      <td>{group.group}</td>\n                      <td>{s.file}</td>\n                      <td>{s.replicate}</td>\n                      <td>{s.value.toFixed(2)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Analysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}