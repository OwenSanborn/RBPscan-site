{"ast":null,"code":"var _jsxFileName = \"/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\nconst Analysis = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n  const handleFileUpload = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n  const processFiles = async () => {\n    if (!metadata.length) return;\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', '');\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group.trim() || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n      const data = await response.json();\n      const grouped = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = {\n          total: 0,\n          count: 0,\n          samples: []\n        };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({\n          file: d.File,\n          replicate: d.Replicate,\n          value: d.Mean_edit\n        });\n        return acc;\n      }, {});\n      const labels = Object.keys(grouped);\n      const maxEdit = Math.max(...data.map(d => d.Mean_edit || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n      const groupMeans = labels.map(group => grouped[group].total / grouped[group].count);\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, i) => grouped[group].samples.map(s => ({\n          x: labels[i],\n          y: s.value\n        }))),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        order: 2\n      };\n      const barData = {\n        label: 'Mean Editing (%)',\n        data: groupMeans,\n        backgroundColor: '#C00000',\n        borderColor: '#C00000',\n        borderWidth: 1,\n        order: 1\n      };\n      setResults({\n        labels,\n        datasets: [barData, replicatePoints],\n        rawData: Object.entries(grouped).map(([group, info]) => ({\n          group,\n          samples: info.samples\n        })),\n        chartMax\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n  const chartOptions = maxY => ({\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Editing by Group',\n        color: '#C00000'\n      }\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Group'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: {\n          display: true,\n          text: 'Editing (%)'\n        }\n      }\n    }\n  });\n  const exportToCSV = () => {\n    if (!results) return;\n    const rows = [[\"File\", \"Group\", \"Replicate\", \"Editing (%)\"]];\n    results.rawData.forEach(group => {\n      group.samples.forEach(s => {\n        rows.push([s.file, group.group, s.replicate, s.value.toFixed(2)]);\n      });\n    });\n    const csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(r => r.join(\",\")).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.href = encodedUri;\n    link.download = \"sanger_results.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title is-3 has-text-black mb-4\",\n      children: \"Sanger Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field is-grouped mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file has-name is-rounded\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"file-input\",\n              type: \"file\",\n              accept: \".ab1\",\n              multiple: true,\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-cta\",\n              style: {\n                backgroundColor: '#C00000',\n                color: 'white',\n                borderRadius: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-label\",\n                children: \"Select Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#777',\n                paddingLeft: '10px'\n              },\n              children: files.length > 0 ? `${files.length} file(s)` : 'No files selected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processFiles,\n          className: \"button\",\n          style: {\n            backgroundColor: '#C00000',\n            color: 'white',\n            borderRadius: '20px',\n            padding: '10px 20px',\n            border: 'none'\n          },\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Analyze'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-bordered has-text-black\",\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            backgroundColor: '#e8e8e8'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Replicate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                color: 'black'\n              },\n              children: \"% Editing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          style: {\n            backgroundColor: '#ffffff',\n            color: 'black'\n          },\n          children: results.rawData.flatMap(group => group.samples.map((s, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: 'black'\n              },\n              children: s.file\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: 'black'\n              },\n              children: group.group\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: 'black'\n              },\n              children: s.replicate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                color: 'black'\n              },\n              children: s.value != null ? s.value.toFixed(2) : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this)]\n          }, `${group.group}-${s.file}-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: exportToCSV,\n          style: {\n            cursor: 'pointer',\n            color: '#C00000',\n            textDecoration: 'underline'\n          },\n          children: \"Export to CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: processingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 28\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"has-text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column is-half\",\n        style: {\n          minHeight: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: results,\n          options: chartOptions(results.chartMax)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Analysis, \"zzfr1sMejOSiHjqWSxAUxIeiSqY=\");\n_c = Analysis;\nexport default Analysis;\nvar _c;\n$RefreshReg$(_c, \"Analysis\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Analysis","_s","files","setFiles","metadata","setMetadata","results","setResults","loading","setLoading","error","setError","processingStatus","setProcessingStatus","API_URL","process","env","REACT_APP_API_URL","handleFileUpload","event","uploadedFiles","Array","from","target","validFiles","filter","file","name","endsWith","size","length","map","idx","fileName","group","replicate","handleMetadataChange","index","field","value","newMetadata","processFiles","formData","FormData","forEach","append","JSON","stringify","m","i","trim","response","fetch","method","body","ok","errorData","json","Error","data","grouped","reduce","acc","d","isNaN","Mean_edit","Group","total","count","samples","push","File","Replicate","labels","Object","keys","maxEdit","Math","max","chartMax","min","ceil","groupMeans","replicatePoints","label","flatMap","s","x","y","type","backgroundColor","pointStyle","radius","order","barData","borderColor","borderWidth","datasets","rawData","entries","info","err","console","message","chartOptions","maxY","responsive","plugins","legend","display","title","text","color","scales","beginAtZero","exportToCSV","rows","toFixed","csvContent","r","join","encodedUri","encodeURI","link","document","createElement","href","download","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","style","borderRadius","paddingLeft","onClick","padding","border","disabled","cursor","textDecoration","minHeight","options","_c","$RefreshReg$"],"sources":["/Users/osanborn/Documents/rbpscan/src/components/SangerAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport '../App.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, Title, Tooltip, Legend);\n\nconst Analysis = () => {\n  const [files, setFiles] = useState([]);\n  const [metadata, setMetadata] = useState([]);\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('');\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n  const handleFileUpload = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    const validFiles = uploadedFiles.filter(file => file.name.endsWith('.ab1') && file.size <= 10 * 1024 * 1024);\n\n    if (validFiles.length !== uploadedFiles.length) {\n      setError('Some files are invalid. Please upload .ab1 files under 10MB.');\n      return;\n    }\n\n    setFiles(validFiles);\n    setMetadata(validFiles.map((file, idx) => ({\n      fileName: file.name,\n      group: '',\n      replicate: '1'\n    })));\n    setError(null);\n    setResults(null);\n  };\n\n  const handleMetadataChange = (index, field, value) => {\n    const newMetadata = [...metadata];\n    newMetadata[index][field] = value;\n    setMetadata(newMetadata);\n  };\n\n  const processFiles = async () => {\n    if (!metadata.length) return;\n\n    setLoading(true);\n    setError(null);\n    setProcessingStatus('Uploading and analyzing files...');\n\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('guide_seq', '');\n      formData.append('groups', JSON.stringify(metadata.map((m, i) => m.group.trim() || `${i + 1}`)));\n      formData.append('replicates', JSON.stringify(metadata.map(m => m.replicate)));\n\n      const response = await fetch(`${API_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Server error');\n      }\n\n      const data = await response.json();\n\n      const grouped = data.reduce((acc, d) => {\n        if (d.Error || isNaN(d.Mean_edit)) return acc;\n        const group = d.Group || 'Unknown';\n        if (!acc[group]) acc[group] = { total: 0, count: 0, samples: [] };\n        acc[group].total += d.Mean_edit;\n        acc[group].count++;\n        acc[group].samples.push({ file: d.File, replicate: d.Replicate, value: d.Mean_edit });\n        return acc;\n      }, {});\n\n      const labels = Object.keys(grouped);\n      const maxEdit = Math.max(...data.map(d => d.Mean_edit || 0));\n      const chartMax = Math.min(100, Math.ceil(maxEdit + 10));\n\n      const groupMeans = labels.map(group => grouped[group].total / grouped[group].count);\n\n      const replicatePoints = {\n        label: 'Replicates',\n        data: labels.flatMap((group, i) =>\n          grouped[group].samples.map(s => ({\n            x: labels[i],\n            y: s.value\n          }))\n        ),\n        type: 'scatter',\n        backgroundColor: '#000',\n        pointStyle: 'circle',\n        radius: 4,\n        order: 2\n      };\n\n      const barData = {\n        label: 'Mean Editing (%)',\n        data: groupMeans,\n        backgroundColor: '#C00000',\n        borderColor: '#C00000',\n        borderWidth: 1,\n        order: 1\n      };\n\n      setResults({\n        labels,\n        datasets: [barData, replicatePoints],\n        rawData: Object.entries(grouped).map(([group, info]) => ({\n          group,\n          samples: info.samples\n        })),\n        chartMax\n      });\n    } catch (err) {\n      console.error(err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n      setProcessingStatus('');\n    }\n  };\n\n  const chartOptions = (maxY) => ({\n    responsive: true,\n    plugins: {\n      legend: { display: false },\n      title: { display: true, text: 'Editing by Group', color: '#C00000' },\n    },\n    scales: {\n      x: {\n        type: 'category',\n        title: { display: true, text: 'Group' }\n      },\n      y: {\n        beginAtZero: true,\n        max: maxY,\n        title: { display: true, text: 'Editing (%)' }\n      }\n    }\n  });\n\n  const exportToCSV = () => {\n    if (!results) return;\n\n    const rows = [[\"File\", \"Group\", \"Replicate\", \"Editing (%)\"]];\n    results.rawData.forEach(group => {\n      group.samples.forEach(s => {\n        rows.push([s.file, group.group, s.replicate, s.value.toFixed(2)]);\n      });\n    });\n\n    const csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(r => r.join(\",\")).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.href = encodedUri;\n    link.download = \"sanger_results.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <h1 className=\"title is-3 has-text-black mb-4\">Sanger Analysis</h1>\n\n      <div className=\"field is-grouped mb-5\">\n        <div className=\"control\">\n          <div className=\"file has-name is-rounded\">\n            <label className=\"file-label\">\n              <input\n                className=\"file-input\"\n                type=\"file\"\n                accept=\".ab1\"\n                multiple\n                onChange={handleFileUpload}\n              />\n              <span className=\"file-cta\" style={{ backgroundColor: '#C00000', color: 'white', borderRadius: '20px' }}>\n                <span className=\"file-label\">Select Files</span>\n              </span>\n              <span style={{ color: '#777', paddingLeft: '10px' }}>\n                {files.length > 0 ? `${files.length} file(s)` : 'No files selected'}\n              </span>\n            </label>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <button\n            onClick={processFiles}\n            className=\"button\"\n            style={{\n              backgroundColor: '#C00000',\n              color: 'white',\n              borderRadius: '20px',\n              padding: '10px 20px',\n              border: 'none'\n            }}\n            disabled={loading}\n          >\n            {loading ? 'Processing...' : 'Analyze'}\n          </button>\n        </div>\n      </div>\n\n      {results && (\n        <div>\n          <table className=\"table is-bordered has-text-black\" style={{ backgroundColor: 'white', color: 'black' }}>\n            <thead style={{ backgroundColor: '#e8e8e8' }}>\n              <tr>\n                <th style={{ color: 'black' }}>File</th>\n                <th style={{ color: 'black' }}>Group</th>\n                <th style={{ color: 'black' }}>Replicate</th>\n                <th style={{ color: 'black' }}>% Editing</th>\n              </tr>\n            </thead>\n            <tbody style={{ backgroundColor: '#ffffff', color: 'black' }}>\n              {results.rawData.flatMap((group) =>\n                group.samples.map((s, idx) => (\n                  <tr key={`${group.group}-${s.file}-${idx}`}>\n                    <td style={{ color: 'black' }}>{s.file}</td>\n                    <td style={{ color: 'black' }}>{group.group}</td>\n                    <td style={{ color: 'black' }}>{s.replicate}</td>\n                    <td style={{ color: 'black' }}>{s.value != null ? s.value.toFixed(2) : ''}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n          <p>\n            <a onClick={exportToCSV} style={{ cursor: 'pointer', color: '#C00000', textDecoration: 'underline' }}>\n              Export to CSV\n            </a>\n          </p>\n        </div>\n      )}\n\n      {processingStatus && <p>{processingStatus}</p>}\n      {error && <div className=\"has-text-danger\">{error}</div>}\n\n      {results && (\n        <div className=\"columns mt-5\">\n          <div className=\"column is-half\" style={{ minHeight: '400px' }}>\n            <Bar data={results} options={chartOptions(results.chartMax)} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Analysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}