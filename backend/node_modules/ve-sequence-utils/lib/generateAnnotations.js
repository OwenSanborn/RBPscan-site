"use strict";

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _require = require("ve-range-utils"),
    generateRandomRange = _require.generateRandomRange;

var bsonObjectId = require("bson-objectid");

function generateAnnotations(numberOfAnnotationsToGenerate, start, end, maxLength) {
  var result = {};
  for (var i = 0; i < numberOfAnnotationsToGenerate; i++) {
    var annotation = generateAnnotation(start, end, maxLength);
    result[annotation.id] = annotation;
  }
  return result;
}

function generateAnnotation(start, end, maxLength) {
  var range = generateRandomRange(start, end, maxLength);
  return _extends({}, range, {
    name: getRandomInt(0, 100000).toString(),
    type: "misc_feature",
    id: bsonObjectId().str,
    forward: Math.random() > 0.5,
    notes: {}
  });
}

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

module.exports = generateAnnotations;